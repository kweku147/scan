{"version":3,"sources":["../src/index.ts","../src/util/index.ts","../src/constants/index.ts"],"sourcesContent":["export { findGhost as findPhantom, findGhost } from './util'\r\nexport * from './types'\r\n","import { existsSync, readdirSync, readFileSync, statSync } from 'fs'\r\nimport { join, parse } from 'path'\r\nimport AST, { GoGoAST } from 'gogocode'\r\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n// @ts-ignore\r\nimport validPkgName from 'validate-npm-package-name'\r\nimport { cssExt, jsExt, vueExt } from '../constants'\r\nimport type { GhostOptions, ExcludePattern } from '../types'\r\n\r\n/**\r\n * 查找幽灵依赖\r\n * @param paths 目标文件夹或目录\r\n * @param pkgJsonPath package.json文件路径\r\n */\r\nexport function findGhost(\r\n  paths: string | string[],\r\n  pkgJsonPath: string,\r\n  options: GhostOptions = {}\r\n): string[] {\r\n  const targetPaths = [paths].flat()\r\n  const pkgJson =\r\n    pkgJsonPath && existsSync(pkgJsonPath)\r\n      ? JSON.parse(readFileSync(pkgJsonPath, 'utf-8'))\r\n      : {}\r\n  // 已安装依赖\r\n  const deps = {\r\n    ...pkgJson.dependencies,\r\n    ...pkgJson.devDependencies\r\n  }\r\n\r\n  // 获取检查的目标文件\r\n  let files: string[] = []\r\n  const supportExt = [...cssExt, ...jsExt, ...vueExt]\r\n  for (const p of targetPaths) {\r\n    if (!existsSync(p)) {\r\n      continue\r\n    }\r\n    if (statSync(p).isDirectory()) {\r\n      files.push(...scanDirFiles(p, supportExt))\r\n    } else {\r\n      files.push(p)\r\n    }\r\n  }\r\n  // 去重\r\n  files = [...new Set(files)]\r\n\r\n  // 获取文件里引入的第三方包\r\n  const pkgList: string[] = []\r\n  for (const file of files) {\r\n    const importSources = getFileImportSource(\r\n      readFileSync(file, 'utf-8'),\r\n      parse(file).ext\r\n    )\r\n    const validSource = importSources.filter((v) =>\r\n      isValidNodeModulesSource(file, v)\r\n    )\r\n    const pkgNames = validSource.map((v) => getPkgNameBySourcePath(v))\r\n    pkgList.push(...pkgNames)\r\n  }\r\n\r\n  // 从找到的第三方包里剔除已安装的，剩下的就是幽灵依赖\r\n  const ghostPkgList = new Set(pkgList)\r\n  for (const dep of Object.keys(deps)) {\r\n    if (ghostPkgList.has(dep)) {\r\n      ghostPkgList.delete(dep)\r\n    }\r\n  }\r\n\r\n  const excludePkg = options.exclude ?? []\r\n  const excludeNodeLib = !(options.includeNodeLib ?? false)\r\n  return (\r\n    [...ghostPkgList]\r\n      .filter((v) => !isExclude(v, excludePkg))\r\n      // 控制是否排除node包\r\n      .filter((v) => !excludeNodeLib || !isNodeLib(v))\r\n      // 只保留合法包名(与上面的不能冲突)\r\n      .filter((v) =>\r\n        excludeNodeLib || !isNodeLib(v) ? isValidPkgName(v) : true\r\n      )\r\n  )\r\n}\r\n\r\nexport function getFileImportSource(fileText: string, ext: string) {\r\n  const sources: string[] = []\r\n\r\n  if (jsExt.includes(ext)) {\r\n    sources.push(...getJsFileImportSource(fileText))\r\n  }\r\n  if (cssExt.includes(ext)) {\r\n    sources.push(...getCssFileImportSource(fileText))\r\n  }\r\n  if (vueExt.includes(ext)) {\r\n    sources.push(...getVueFileImportSource(fileText))\r\n  }\r\n  return sources\r\n}\r\n\r\nexport function getVueFileImportSource(fileText: string) {\r\n  const sources: string[] = []\r\n  // 目前发现Vue3 <script lang=\"ts\" setup> 的无法正常解析，所以在解析前先处理一下setup关键字\r\n  const ast = AST(fileText.replace(/<script(.*)setup(.*)>/, '<script$1$2>'), {\r\n    parseOptions: { language: 'vue' }\r\n  })\r\n  const script = ast.find('<script></script>').generate().trim()\r\n  sources.push(...getJsFileImportSource(script))\r\n  sources.push(...getCssFileImportSource(fileText))\r\n  return sources\r\n}\r\n\r\nexport function getCssFileImportSource(fileText: string) {\r\n  const sources: string[] = []\r\n  const importRegexp = /^@import\\s+['\"](.*)?['\"]/\r\n  const lines = fileText.split('\\n')\r\n  for (const line of lines) {\r\n    const match = line.trim().match(importRegexp)?.[1]\r\n    if (match) {\r\n      sources.push(match)\r\n    }\r\n  }\r\n  return sources\r\n}\r\n\r\nexport function getJsFileImportSource(fileText: string) {\r\n  const sources: string[] = []\r\n  const ast = AST(fileText)\r\n  if (!ast.find) {\r\n    return sources\r\n  }\r\n  // 处理import from/export from\r\n  const fromCallback = (node: GoGoAST) => {\r\n    const importPath = node.attr('source.value') as string\r\n    sources.push(importPath)\r\n  }\r\n  ast.find({ type: 'ImportDeclaration' }).each(fromCallback)\r\n  ast.find({ type: 'ExportNamedDeclaration' }).each(fromCallback)\r\n\r\n  // 处理import('')\r\n  ast.find('import($_$)').each((node) => {\r\n    const importPath = node.match[0][0]?.value\r\n    sources.push(importPath)\r\n  })\r\n  // 处理require('')\r\n  ast.find('require($_$)').each((node) => {\r\n    const importPath = node.match[0][0]?.value\r\n    sources.push(importPath)\r\n  })\r\n  return sources\r\n}\r\n\r\nexport function scanDirFiles(\r\n  dir: string,\r\n  extList: string[] = [],\r\n  exclude: ExcludePattern | ExcludePattern[] = [\r\n    'node_modules',\r\n    '.git',\r\n    '.vscode'\r\n  ]\r\n) {\r\n  const files = readdirSync(dir, { withFileTypes: true })\r\n  const res: string[] = []\r\n  for (const file of files) {\r\n    const filename = join(dir, file.name)\r\n    if (isExclude(filename, exclude)) {\r\n      continue\r\n    }\r\n\r\n    if (\r\n      file.isFile() &&\r\n      (extList.length === 0 || extList.includes(parse(filename).ext))\r\n    ) {\r\n      res.push(filename)\r\n    }\r\n\r\n    if (file.isDirectory()) {\r\n      res.push(...scanDirFiles(filename, extList, exclude))\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\nexport function isExclude(\r\n  value: string,\r\n  exclude: ExcludePattern | ExcludePattern[]\r\n) {\r\n  const patterns = [exclude].flat().filter((v) => v)\r\n  return (\r\n    patterns.findIndex((pattern) =>\r\n      typeof pattern === 'string'\r\n        ? value.includes(pattern)\r\n        : pattern.test(value)\r\n    ) !== -1\r\n  )\r\n}\r\n\r\nexport function isValidNodeModulesSource(\r\n  filePath: string,\r\n  importSourcePath: string\r\n) {\r\n  const { dir } = parse(filePath)\r\n  if (!importSourcePath) {\r\n    return false\r\n  }\r\n  if (importSourcePath.includes('node_modules')) {\r\n    return true\r\n  }\r\n  if (\r\n    ['./', '../', '@/', '~@/', '`'].some((prefix) =>\r\n      importSourcePath.startsWith(prefix)\r\n    )\r\n  ) {\r\n    return false\r\n  }\r\n  if (\r\n    ['', ...cssExt, ...jsExt].some((ext) =>\r\n      existsSync(join(dir, `${importSourcePath}${ext}`))\r\n    )\r\n  ) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport function getPkgNameBySourcePath(pkgPath: string) {\r\n  const paths = pkgPath\r\n    .replace(/~/g, '')\r\n    .replace(/.*node_modules\\//, '')\r\n    .split('/')\r\n  return paths[0].startsWith('@') ? paths.slice(0, 2).join('/') : paths[0]\r\n}\r\n\r\nexport function isNodeLib(v: string) {\r\n  return /^(?:assert|buffer|child_process|cluster|console|constants|crypto|dgram|dns|domain|events|fs|http|https|module|net|os|path|punycode|querystring|readline|repl|stream|string_decoder|sys|timers|tls|tty|url|util|vm|zlib)$/.test(\r\n    v\r\n  )\r\n}\r\n\r\nexport function isValidPkgName(pkgName: string): boolean {\r\n  const result = validPkgName(pkgName)\r\n  return result.validForNewPackages\r\n}\r\n","export const cssExt = ['.css', '.scss', '.sass', '.less']\r\n\r\nexport const jsExt = ['.js', '.jsx', '.ts', '.tsx']\r\n\r\nexport const vueExt = ['.vue']\r\n"],"mappings":"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","names":["src_exports","__export","findGhost","__toCommonJS","import_fs","import_path","import_gogocode","import_validate_npm_package_name","cssExt","jsExt","vueExt","findGhost","paths","pkgJsonPath","options","_a","_b","targetPaths","pkgJson","deps","__spreadValues","files","supportExt","cssExt","jsExt","vueExt","p","scanDirFiles","pkgList","file","pkgNames","getFileImportSource","v","isValidNodeModulesSource","getPkgNameBySourcePath","ghostPkgList","dep","excludePkg","excludeNodeLib","isExclude","isNodeLib","isValidPkgName","fileText","ext","sources","getJsFileImportSource","getCssFileImportSource","getVueFileImportSource","script","AST","importRegexp","lines","line","match","ast","fromCallback","node","importPath","dir","extList","exclude","res","filename","value","pattern","filePath","importSourcePath","prefix","pkgPath","pkgName","validPkgName"]}